#include <iostream>
#include <string>
#include <vector>

using namespace std;

class Card {
	private:
		string m_name;
		int m_value;
		int m_amount = 4;
	public:
		Card (){};
		Card (string name, int value)
		:m_name(name), m_value(value){}
		
		
		string get_name () {
			return m_name;
		}
		
		int get_value () {
			if (m_amount) {
				m_amount--;
				return m_value;
			}
		}
		
		int get_amount () {
			return m_amount;
		}
};

class Hand {
	private:
		
	public:
		vector<Card*> cards;
		
		void Add(Card *c) {
			cards.push_back(c);
		}
		
		void Clear() {
			for (int i = 0; i < cards.size(); i++){
				delete cards[i];
			};
			cards.clear();
		}
		
		int GetValue(){
			int value = 0;
			for (int i = 0; i < cards.size(); i++){
				value+=cards[i]->get_value();
			};
			return value;
		}
		
		void print(){
			if (cards.empty()) {cout << "Hand is empty!" << endl;}
			else {
				for (int i = 0; i < cards.size(); i++){
					cout << cards[i]->get_name() << endl;
				}
			}
		}
};

int main () {
	Hand f;
	Card* card1 = new Card("King", 10);
	f.Add(card1);
	Card* card2 = new Card("Six", 6);
	f.Add(card2);
	f.print();
	cout << f.GetValue() << endl;
	
};
